[{"name":"abstract val columns: MutableCollection<TreeTableColumn<S, *>>","description":"ktfx.jfoenix.controls.JFXTreeTableColumnScope.columns","location":"jfoenix-commons/ktfx.jfoenix.controls/-j-f-x-tree-table-column-scope/columns.html","searchKeys":["columns","abstract val columns: MutableCollection<TreeTableColumn<S, *>>","ktfx.jfoenix.controls.JFXTreeTableColumnScope.columns"]},{"name":"fun <R> Stage.jfxAlert(title: String? = null, graphic: Node? = null, dialogAction: JFXAlert<R>.() -> Unit? = null): Optional<R>","description":"ktfx.jfoenix.dialogs.jfxAlert","location":"jfoenix-commons/ktfx.jfoenix.dialogs/jfx-alert.html","searchKeys":["jfxAlert","fun <R> Stage.jfxAlert(title: String? = null, graphic: Node? = null, dialogAction: JFXAlert<R>.() -> Unit? = null): Optional<R>","ktfx.jfoenix.dialogs.jfxAlert"]},{"name":"fun <S : RecursiveTreeObject<S>> JFXTreeTableColumn<S, *>.columns(configuration: JFXTreeTableColumnScope<S>.() -> Unit)","description":"ktfx.jfoenix.controls.columns","location":"jfoenix-commons/ktfx.jfoenix.controls/columns.html","searchKeys":["columns","fun <S : RecursiveTreeObject<S>> JFXTreeTableColumn<S, *>.columns(configuration: JFXTreeTableColumnScope<S>.() -> Unit)","ktfx.jfoenix.controls.columns"]},{"name":"fun <S : RecursiveTreeObject<S>> JFXTreeTableView<S>.columns(configuration: JFXTreeTableColumnScope<S>.() -> Unit)","description":"ktfx.jfoenix.controls.columns","location":"jfoenix-commons/ktfx.jfoenix.controls/columns.html","searchKeys":["columns","fun <S : RecursiveTreeObject<S>> JFXTreeTableView<S>.columns(configuration: JFXTreeTableColumnScope<S>.() -> Unit)","ktfx.jfoenix.controls.columns"]},{"name":"fun JFXSnackbar.show(text: String, duration: Long, actionText: String?, action: (ActionEvent) -> Unit? = null)","description":"ktfx.jfoenix.controls.show","location":"jfoenix-commons/ktfx.jfoenix.controls/show.html","searchKeys":["show","fun JFXSnackbar.show(text: String, duration: Long, actionText: String?, action: (ActionEvent) -> Unit? = null)","ktfx.jfoenix.controls.show"]},{"name":"fun Pane.jfxSnackbar(text: String, duration: Long, actionText: String?, action: (ActionEvent) -> Unit? = null): JFXSnackbar","description":"ktfx.jfoenix.controls.jfxSnackbar","location":"jfoenix-commons/ktfx.jfoenix.controls/jfx-snackbar.html","searchKeys":["jfxSnackbar","fun Pane.jfxSnackbar(text: String, duration: Long, actionText: String?, action: (ActionEvent) -> Unit? = null): JFXSnackbar","ktfx.jfoenix.controls.jfxSnackbar"]},{"name":"inline fun <R> Stage.jfxAlert(noinline dialogAction: JFXAlert<R>.() -> Unit? = null): Optional<R>","description":"ktfx.jfoenix.dialogs.jfxAlert","location":"jfoenix-commons/ktfx.jfoenix.dialogs/jfx-alert.html","searchKeys":["jfxAlert","inline fun <R> Stage.jfxAlert(noinline dialogAction: JFXAlert<R>.() -> Unit? = null): Optional<R>","ktfx.jfoenix.dialogs.jfxAlert"]},{"name":"inline fun <T : Event> Node.delayedEventHandler(delayTime: Duration, eventType: EventType<T>, noinline handler: (T) -> Unit): EventHandler<in T>","description":"ktfx.jfoenix.controls.delayedEventHandler","location":"jfoenix-commons/ktfx.jfoenix.controls/delayed-event-handler.html","searchKeys":["delayedEventHandler","inline fun <T : Event> Node.delayedEventHandler(delayTime: Duration, eventType: EventType<T>, noinline handler: (T) -> Unit): EventHandler<in T>","ktfx.jfoenix.controls.delayedEventHandler"]},{"name":"inline fun <T> ObservableValue<T>.delayedPropertyInvalidationListener(delayTime: Duration, noinline consumer: (T) -> Unit): InvalidationListener","description":"ktfx.jfoenix.controls.delayedPropertyInvalidationListener","location":"jfoenix-commons/ktfx.jfoenix.controls/delayed-property-invalidation-listener.html","searchKeys":["delayedPropertyInvalidationListener","inline fun <T> ObservableValue<T>.delayedPropertyInvalidationListener(delayTime: Duration, noinline consumer: (T) -> Unit): InvalidationListener","ktfx.jfoenix.controls.delayedPropertyInvalidationListener"]},{"name":"inline fun <T> ObservableValue<T>.delayedPropertyInvalidationListener(delayTime: Duration, noinline justInTimeConsumer: (T) -> Unit, noinline consumer: (T) -> Unit): InvalidationListener","description":"ktfx.jfoenix.controls.delayedPropertyInvalidationListener","location":"jfoenix-commons/ktfx.jfoenix.controls/delayed-property-invalidation-listener.html","searchKeys":["delayedPropertyInvalidationListener","inline fun <T> ObservableValue<T>.delayedPropertyInvalidationListener(delayTime: Duration, noinline justInTimeConsumer: (T) -> Unit, noinline consumer: (T) -> Unit): InvalidationListener","ktfx.jfoenix.controls.delayedPropertyInvalidationListener"]},{"name":"inline fun Color.toHex(): String","description":"ktfx.jfoenix.controls.toHex","location":"jfoenix-commons/ktfx.jfoenix.controls/to-hex.html","searchKeys":["toHex","inline fun Color.toHex(): String","ktfx.jfoenix.controls.toHex"]},{"name":"inline fun JFXSnackbar.showIndefinite(text: String)","description":"ktfx.jfoenix.controls.showIndefinite","location":"jfoenix-commons/ktfx.jfoenix.controls/show-indefinite.html","searchKeys":["showIndefinite","inline fun JFXSnackbar.showIndefinite(text: String)","ktfx.jfoenix.controls.showIndefinite"]},{"name":"inline fun JFXSnackbar.showIndefinite(text: String, actionText: String?, noinline action: (ActionEvent) -> Unit? = null)","description":"ktfx.jfoenix.controls.showIndefinite","location":"jfoenix-commons/ktfx.jfoenix.controls/show-indefinite.html","searchKeys":["showIndefinite","inline fun JFXSnackbar.showIndefinite(text: String, actionText: String?, noinline action: (ActionEvent) -> Unit? = null)","ktfx.jfoenix.controls.showIndefinite"]},{"name":"inline fun Node.popDepth()","description":"ktfx.jfoenix.controls.popDepth","location":"jfoenix-commons/ktfx.jfoenix.controls/pop-depth.html","searchKeys":["popDepth","inline fun Node.popDepth()","ktfx.jfoenix.controls.popDepth"]},{"name":"inline fun Node.pressAndHoldFilter(holdTime: Duration, noinline handler: (MouseEvent) -> Unit)","description":"ktfx.jfoenix.controls.pressAndHoldFilter","location":"jfoenix-commons/ktfx.jfoenix.controls/press-and-hold-filter.html","searchKeys":["pressAndHoldFilter","inline fun Node.pressAndHoldFilter(holdTime: Duration, noinline handler: (MouseEvent) -> Unit)","ktfx.jfoenix.controls.pressAndHoldFilter"]},{"name":"inline fun Node.pressAndHoldHandler(holdTime: Duration, noinline handler: (MouseEvent) -> Unit)","description":"ktfx.jfoenix.controls.pressAndHoldHandler","location":"jfoenix-commons/ktfx.jfoenix.controls/press-and-hold-handler.html","searchKeys":["pressAndHoldHandler","inline fun Node.pressAndHoldHandler(holdTime: Duration, noinline handler: (MouseEvent) -> Unit)","ktfx.jfoenix.controls.pressAndHoldHandler"]},{"name":"inline fun Node.wrapDepth(level: Int): Node","description":"ktfx.jfoenix.controls.wrapDepth","location":"jfoenix-commons/ktfx.jfoenix.controls/wrap-depth.html","searchKeys":["wrapDepth","inline fun Node.wrapDepth(level: Int): Node","ktfx.jfoenix.controls.wrapDepth"]},{"name":"inline fun Pane.jfxIndefiniteSnackbar(text: String): JFXSnackbar","description":"ktfx.jfoenix.controls.jfxIndefiniteSnackbar","location":"jfoenix-commons/ktfx.jfoenix.controls/jfx-indefinite-snackbar.html","searchKeys":["jfxIndefiniteSnackbar","inline fun Pane.jfxIndefiniteSnackbar(text: String): JFXSnackbar","ktfx.jfoenix.controls.jfxIndefiniteSnackbar"]},{"name":"inline fun Pane.jfxIndefiniteSnackbar(text: String, actionText: String?, noinline action: (ActionEvent) -> Unit? = null): JFXSnackbar","description":"ktfx.jfoenix.controls.jfxIndefiniteSnackbar","location":"jfoenix-commons/ktfx.jfoenix.controls/jfx-indefinite-snackbar.html","searchKeys":["jfxIndefiniteSnackbar","inline fun Pane.jfxIndefiniteSnackbar(text: String, actionText: String?, noinline action: (ActionEvent) -> Unit? = null): JFXSnackbar","ktfx.jfoenix.controls.jfxIndefiniteSnackbar"]},{"name":"inline fun Pane.jfxSnackbar(text: String, duration: Long): JFXSnackbar","description":"ktfx.jfoenix.controls.jfxSnackbar","location":"jfoenix-commons/ktfx.jfoenix.controls/jfx-snackbar.html","searchKeys":["jfxSnackbar","inline fun Pane.jfxSnackbar(text: String, duration: Long): JFXSnackbar","ktfx.jfoenix.controls.jfxSnackbar"]},{"name":"inline fun Region.updateBackground(newBackground: Background, paint: Paint = Color.BLACK)","description":"ktfx.jfoenix.controls.updateBackground","location":"jfoenix-commons/ktfx.jfoenix.controls/update-background.html","searchKeys":["updateBackground","inline fun Region.updateBackground(newBackground: Background, paint: Paint = Color.BLACK)","ktfx.jfoenix.controls.updateBackground"]},{"name":"interface JFXTreeTableColumnScope<S : RecursiveTreeObject<S>>","description":"ktfx.jfoenix.controls.JFXTreeTableColumnScope","location":"jfoenix-commons/ktfx.jfoenix.controls/-j-f-x-tree-table-column-scope/index.html","searchKeys":["JFXTreeTableColumnScope","interface JFXTreeTableColumnScope<S : RecursiveTreeObject<S>>","ktfx.jfoenix.controls.JFXTreeTableColumnScope"]},{"name":"open fun <T> column(text: String? = null): JFXTreeTableColumn<S, T>","description":"ktfx.jfoenix.controls.JFXTreeTableColumnScope.column","location":"jfoenix-commons/ktfx.jfoenix.controls/-j-f-x-tree-table-column-scope/column.html","searchKeys":["column","open fun <T> column(text: String? = null): JFXTreeTableColumn<S, T>","ktfx.jfoenix.controls.JFXTreeTableColumnScope.column"]},{"name":"open fun <T> column(text: String? = null, configuration: JFXTreeTableColumn<S, T>.() -> Unit): JFXTreeTableColumn<S, T>","description":"ktfx.jfoenix.controls.JFXTreeTableColumnScope.column","location":"jfoenix-commons/ktfx.jfoenix.controls/-j-f-x-tree-table-column-scope/column.html","searchKeys":["column","open fun <T> column(text: String? = null, configuration: JFXTreeTableColumn<S, T>.() -> Unit): JFXTreeTableColumn<S, T>","ktfx.jfoenix.controls.JFXTreeTableColumnScope.column"]},{"name":"open operator fun <T> String.invoke(configuration: JFXTreeTableColumn<S, T>.() -> Unit): JFXTreeTableColumn<S, T>","description":"ktfx.jfoenix.controls.JFXTreeTableColumnScope.invoke","location":"jfoenix-commons/ktfx.jfoenix.controls/-j-f-x-tree-table-column-scope/invoke.html","searchKeys":["invoke","open operator fun <T> String.invoke(configuration: JFXTreeTableColumn<S, T>.() -> Unit): JFXTreeTableColumn<S, T>","ktfx.jfoenix.controls.JFXTreeTableColumnScope.invoke"]},{"name":"var Node.depth: Int","description":"ktfx.jfoenix.controls.depth","location":"jfoenix-commons/ktfx.jfoenix.controls/depth.html","searchKeys":["depth","var Node.depth: Int","ktfx.jfoenix.controls.depth"]}]
